// https://containers.dev/implementors/json_reference/
{
	"name": "python",
	"image": "mcr.microsoft.com/devcontainers/base:ubuntu-24.04",
	// "dockerComposeFile": [
	// 	"./docker-compose.yml"
	// ],
	// "service": "app",
	"remoteUser": "vscode",
	"containerUser": "vscode",
	//
	// Features - https://containers.dev/implementors/features.
	//
	"features": {
		"ghcr.io/devcontainers/features/python:1": {
			"version": "3.11",
			// Other required packages are installed via onCreateCommand,
			// since toolsToInstall uses pipx which cannot install libraries
			"installTools": false,
			"toolsToInstall": "" // set installTools to true again
		},
		"ghcr.io/devcontainers-contrib/features/poetry:2": {
			"version": "latest"
		},
		// NodeJS only necessary for SonarLint extension, specifically to analyse .json files.
		// NoseJS can be safely removed, it only results in a pop-up error from sonarlint saying it cannot review .json files without nodejs.
		"ghcr.io/devcontainers/features/node:1": {
			"version": "latest"
		},
		// dotnet only required for DevSkim code quality tool.
		"ghcr.io/devcontainers/features/dotnet:2": {
			"version": "8.0"
		},
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {}
	},
	//
	// ContainerEnv
	//
	"containerEnv": {
		"PYTHONFAULTHANDLER": "1",
		"PYTHONUNBUFFERED": "1",
		"PYTHONHASHSEED": "42",
		"PIP_DISABLE_PIP_VERSION_CHECK": "1",
		// "POETRY_NO_INTERACTION": "1",
		"POETRY_VIRTUALENVS_CREATE": "false",
		// folder vars
		"PROJECT_TEMP_DIR": "temp"
	},
	// "onCreateCommand": {},
	// "updateContentCommand": {},
	"postCreateCommand": {
		// "permissions": "sudo chmod -R +x ./" // automatically fix ownership when files are created on host machine
	},
	"postStartCommand": {
        // "zsh": "${workspaceFolder}/.devcontainer/.dotfiles/install.sh" // install dotfiles
	},
	// "postAttachCommand": {},
	// "waitFor": "", // default updateContentCommand
}
//
// Predefined Variables
//
// ${cwd} - the task runner's current working directory on startup
// ${workspaceFolder} - the path of the folder opened in VS Code
// ${workspaceRootFolderName} - the name of the folder opened in VS Code without any slashes (/)
// ${workspaceFolderBasename} - the name of the folder opened in VS Code without any slashes (/)
// ${file} - the current opened file
// ${relativeFile} - the current opened file relative to workspaceFolder
// ${relativeFileDirname} - the current opened file's dirname relative to workspaceFolder
// ${fileBasename} - the current opened file's basename
// ${fileBasenameNoExtension} - the current opened file's basename with no file extension
// ${fileDirname} - the current opened file's dirname
// ${fileExtname} - the current opened file's extension
// ${lineNumber} - the current selected line number in the active file
// ${selectedText} - the current selected text in the active file
// ${execPath} - the path to the running VS Code executable